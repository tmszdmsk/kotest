(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{105:function(t,e,n){"use strict";n.r(e),n.d(e,"frontMatter",(function(){return o})),n.d(e,"metadata",(function(){return c})),n.d(e,"rightToc",(function(){return i})),n.d(e,"default",(function(){return s}));var a=n(3),r=n(7),b=(n(0),n(163)),o={id:"index",title:"Extensions",slug:"extensions.html",sidebar_label:"Introduction"},c={unversionedId:"extensions/index",id:"extensions/index",isDocsHomePage:!1,title:"Extensions",description:"Kotest integrates with many other libraries and frameworks. Some are provided by the Kotest team, and others are",source:"@site/docs/extensions/index.md",slug:"/extensions/extensions.html",permalink:"/docs/extensions/extensions.html",editUrl:"https://github.com/kotest/kotest/blob/master/documentation/docs/extensions/index.md",version:"current",sidebar_label:"Introduction",sidebar:"extensions",next:{title:"Spring",permalink:"/docs/extensions/spring.html"}},i=[{value:"Kotest Team Extensions",id:"kotest-team-extensions",children:[]},{value:"Third Party Extensions",id:"third-party-extensions",children:[]}],l={rightToc:i};function s(t){var e=t.components,n=Object(r.a)(t,["components"]);return Object(b.b)("wrapper",Object(a.a)({},l,n,{components:e,mdxType:"MDXLayout"}),Object(b.b)("p",null,"Kotest integrates with many other libraries and frameworks. Some are provided by the Kotest team, and others are\nmaintained and hosted by third parties."),Object(b.b)("h3",{id:"kotest-team-extensions"},"Kotest Team Extensions"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Project"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/extensions/spring.html"}),"Spring")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Adds support for spring beans in tests and spring test annotations")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/extensions/ktor.html"}),"Ktor")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Provides matchers for Ktor endpoints")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/extensions/koin.html"}),"Koin")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Kotlin DI framework")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/extensions/mockserver.html"}),"Mockserver")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Integrate mockserver HTTP servers with the test lifecycle")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/extensions/system_extensions.html"}),"System")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Provides utilities for integrating with System.* functions")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/extensions/instant.html"}),"Instant")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Override the 'now' context in java.time")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/extensions/test_containers.html"}),"Test Containers")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Run docker images as part of a test lifecycle")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/extensions/robolectric.html"}),"Roboelectric")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Integrate roboelectric with the test lifecycle")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/extensions/allure.html"}),"Allure")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Provides output for the allure framework")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/extensions/junit_xml.html"}),"JUnit XML")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Provides output in the JUnit XML format for integration with reporting tools")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/extensions/html_reporter.html"}),"HTML Reporter")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Generates HTML reports of test results based on ",Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/extensions/junit_xml.html"}),"JUnit XML"))))),Object(b.b)("h3",{id:"third-party-extensions"},"Third Party Extensions"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Project"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"https://www.http4k.org/guide/reference/kotest/"}),"Http4k")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Functional toolkit for Kotlin HTTP applications")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"https://github.com/micronaut-projects/micronaut-test"}),"Micronaut")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"JVM-based, full-stack framework for building modular, easily testable microservice")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"https://github.com/jGleitz/testfiles"}),"TestFiles")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Creates organized files and directories for testing")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"https://github.com/MrBergin/result4k-kotest-matchers"}),"Result4s")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Result4s matchers")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"https://github.com/LeoColman/kotest-kotless"}),"Kotless")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Utilties for kotless and kotest")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"https://github.com/jsalinaspolo/logcapture"}),"LogCapture")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"LogCapture is a testing library for asserting logging messages")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"https://github.com/appmattus/kotlinfixture/blob/main/fixture-kotest/README.adoc"}),"KotlinFixture")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"generate well-defined, but essentially random, input")))))}s.isMDXComponent=!0},163:function(t,e,n){"use strict";n.d(e,"a",(function(){return p})),n.d(e,"b",(function(){return O}));var a=n(0),r=n.n(a);function b(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){b(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},b=Object.keys(t);for(a=0;a<b.length;a++)n=b[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(t);for(a=0;a<b.length;a++)n=b[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var l=r.a.createContext({}),s=function(t){var e=r.a.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):c(c({},e),t)),n},p=function(t){var e=s(t.components);return r.a.createElement(l.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.a.createElement(r.a.Fragment,{},e)}},m=r.a.forwardRef((function(t,e){var n=t.components,a=t.mdxType,b=t.originalType,o=t.parentName,l=i(t,["components","mdxType","originalType","parentName"]),p=s(n),m=a,O=p["".concat(o,".").concat(m)]||p[m]||d[m]||b;return n?r.a.createElement(O,c(c({ref:e},l),{},{components:n})):r.a.createElement(O,c({ref:e},l))}));function O(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var b=n.length,o=new Array(b);o[0]=m;var c={};for(var i in e)hasOwnProperty.call(e,i)&&(c[i]=e[i]);c.originalType=t,c.mdxType="string"==typeof t?t:a,o[1]=c;for(var l=2;l<b;l++)o[l]=n[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);