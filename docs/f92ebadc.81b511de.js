(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{159:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return l})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return p}));var n=r(3),a=r(7),o=(r(0),r(163)),i={id:"tempfile",title:"Temporary Files",slug:"temporary-files"},l={unversionedId:"framework/tempfile",id:"framework/tempfile",isDocsHomePage:!1,title:"Temporary Files",description:"Sometimes it is requires for a test to create a file and delete it after test, deleting it manually may lead to flaky",source:"@site/docs/framework/tempfile.md",slug:"/framework/temporary-files",permalink:"/docs/framework/temporary-files",editUrl:"https://github.com/kotest/kotest/blob/master/documentation/docs/framework/tempfile.md",version:"current",sidebar:"framework",previous:{title:"Closing resources automatically",permalink:"/docs/framework/autoclose.html"},next:{title:"Test Case Config",permalink:"/docs/framework/testcaseconfig.html"}},c=[{value:"Temporary Directories",id:"temporary-directories",children:[]}],s={rightToc:c};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Sometimes it is requires for a test to create a file and delete it after test, deleting it manually may lead to flaky\ntest."),Object(o.b)("p",null,"For example, you may be using a temporary file during a test. If the test passes successfully, your clean up code will execute\nand the file will be deleted. But in case the assertion fails or another error occurs, which may have caused the file to not be deleted, you will get a stale file\nwhich might affect the test on the next run (file cannot be overwritten exception and so on)."),Object(o.b)("p",null,"Kotest provides a function ",Object(o.b)("inlineCode",{parentName:"p"},"tempfile()")," which you can use in your Spec to create a temporary file for your tests, and which\nKotest will take the responsibility of cleaning up after running all tests in the Spec. This way your\ntests does not have to worry about deleting the temporary file."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-kotlin"}),'class MySpec : FunSpec({\n\n   val file = tempfile()\n\n   test("a temporary file dependent test") {\n      //...\n   }\n})\n\n')),Object(o.b)("h2",{id:"temporary-directories"},"Temporary Directories"),Object(o.b)("p",null,"Similar to temp files, we can create a temp dir using ",Object(o.b)("inlineCode",{parentName:"p"},"tempdir()"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-kotlin"}),'class MySpec : FunSpec({\n\n   val dir = tempdir()\n\n   test("a temporary dir dependent test") {\n      //...\n   }\n})\n')))}p.isMDXComponent=!0},163:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return d}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,d=u["".concat(i,".").concat(m)]||u[m]||f[m]||o;return r?a.a.createElement(d,l(l({ref:t},s),{},{components:r})):a.a.createElement(d,l({ref:t},s))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);